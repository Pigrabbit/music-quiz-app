{"version":3,"sources":["img/playbutton.svg","img/pauseButton.svg","components/Header.js","components/QuizCard.js","pages/index.jsx","pages/404.jsx","components/AudioPlayer.js","utils/items.js","components/AnswerCard.js","components/TargetBoard.js","components/SourceBoard.js","components/ProblemBox.js","pages/quizTakingPage.jsx","pages/quizEnd.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","pathname","React","Component","QuizCard","props","state","category","id","this","MainPage","categories","localStorage","clear","map","idx","key","NotFoundPage","AudioPlayer","isLoading","videoID","autoplay","loop","player","options","height","width","playerVars","start","end","wmode","origin","process","controlButton","playButton","audioPlayer","createRef","isPlaying","setState","pauseButton","e","data","toggleControlButton","seekTo","pauseVideo","target","getPlayerState","current","addEventListener","playVideo","ref","src","alt","videoId","host","opts","onReady","onPlayerReady","bind","onStateChange","onPlayerStateChange","ItemTypes","AnswerCard","useState","content","setContent","type","setType","useEffect","useDrag","item","cardType","collect","monitor","isDragging","drag","style","opacity","TargetBoard","useContext","CardContext","chooseAnswer","isCorrectAnswer","cards","setCards","chosenAnswer","setChosenAnswer","handler","incrementProblemIdx","incrementScore","useDrop","accept","drop","hasSubmittedAlready","Error","error","alert","isOver","some","answer","backgroundColor","card","onClick","length","submittedArtist","submittedTrack","forEach","SourceBoard","unchooseAnswer","createContext","ProblemBox","problem","isVisible","setIsVisible","trackOptions","track","status","concat","artistOptions","artist","answerList","setAnswerList","Provider","value","filter","startSeconds","endSeconds","QuizTakingPage","redirect","score","problemIdx","problems","undefined","location","getItem","setItem","JSON","stringify","fetch","response","json","problemWithMultipleChoice","generateMultipleChoice","p","sort","Math","random","slice","push","parse","fetchMusicProblems","then","console","log","catch","err","isEnd","numCorrect","numTotal","DndProvider","backend","HTML5Backend","QuizEndPage","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.32c90bc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playbutton.75be2c69.svg\";","module.exports = __webpack_public_path__ + \"static/media/pauseButton.e55175de.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\"\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <Link to={{pathname: \"/\"}} >\n          <button className=\"header__home-btn\">\n            <p> Back to home </p>\n          </button>\n        </Link>\n        <h3 className=\"header__text\">Music Quiz APP</h3>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./QuizCard.css\";\n\nclass QuizCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state.category = this.props.category;\n  }\n\n  state = {};\n\n  render() {\n    return (\n      <article className=\"category\" id={this.state.category}>\n        <h4 className=\"category__container\">{this.state.category}</h4>\n        <Link\n          to={{ pathname: \"/quiz\", state: { category: this.state.category } }}\n        >\n          <button className=\"category__startBtn\">\n            <p>Take Quiz</p>\n          </button>\n        </Link>\n      </article>\n    );\n  }\n}\n\nexport default QuizCard;\n","import React from \"react\";\nimport Header from \"../components/Header.js\";\nimport QuizCard from \"../components/QuizCard.js\";\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props)\n    localStorage.clear()\n  }\n\n  state = {\n    categories: [\"k-pop\"],\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header />\n        <section className=\"container\">\n          {this.state.categories.map((category, idx) => {\n            return <QuizCard key={idx} category={category} />;\n          })}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\n\nclass NotFoundPage extends React.Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <section className=\"container\">\n          <h1>404 NOT FOUND</h1>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport YouTube from \"react-youtube\";\n\nimport playButton from \"../img/playbutton.svg\";\nimport pauseButton from \"../img/pauseButton.svg\";\nimport \"./AudioPlayer.css\";\n\nconst UNSTARTED = -1;\nconst ENDED = 0;\nconst PLAYING = 1;\nconst PAUSED = 2;\nconst BUFFERING = 3;\nconst VIDEO_CUED = 5;\nconst ORIGIN_URL = process.env.REACT_APP_ORIGIN_URL;\nconst YOUTUBE_HOST_URL = process.env.REACT_APP_YOUTUBE_HOST_URL;\n\nclass AudioPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state.options = {\n      height: \"0\",\n      width: \"0\",\n      playerVars: {\n        autoplay: this.state.autoplay,\n        loop: this.state.loop,\n        start: this.props.start,\n        end: this.props.end,\n        wmode: \"opaque\",\n        origin: ORIGIN_URL,\n      },\n    };\n    this.state.controlButton = playButton;\n    this.state.videoID = this.props.videoID;\n    this.audioPlayer = React.createRef();\n  }\n\n  state = {\n    isLoading: true,\n    videoID: \"\",\n    autoplay: \"0\",\n    loop: \"1\",\n    player: null,\n  };\n\n  toggleControlButton(isPlaying) {\n    this.setState({ controlButton: isPlaying ? pauseButton : playButton });\n  }\n\n  onPlayerStateChange(e) {\n    if (e.data === ENDED) {\n      this.toggleControlButton(false);\n      this.state.player.seekTo(this.props.start);\n      this.state.player.pauseVideo();\n    }\n  }\n\n  onPlayerReady(e) {\n    this.toggleControlButton(e.target.getPlayerState() !== VIDEO_CUED);\n    this.setState({ player: e.target, isLoading: false });\n\n    this.audioPlayer.current.addEventListener(\"click\", () => {\n      if (\n        this.state.player.getPlayerState() === PLAYING ||\n        this.state.player.getPlayerState() === BUFFERING\n      ) {\n        this.state.player.pauseVideo();\n        this.toggleControlButton(false);\n      } else {\n        this.state.player.playVideo();\n        this.toggleControlButton(true);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"audio-player\" ref={this.audioPlayer}>\n        {this.state.isLoading ? (\n          <div className=\"loader\">\n          </div>\n        ) : (\n          <img\n            src={this.state.controlButton}\n            alt=\"control-button\"\n            className=\"audio-player__control-button\"\n          />\n        )}\n        <YouTube\n          videoId={this.state.videoID}\n          host={YOUTUBE_HOST_URL}\n          opts={this.state.options}\n          onReady={this.onPlayerReady.bind(this)}\n          onStateChange={this.onPlayerStateChange.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AudioPlayer;\n","export const ItemTypes = {\n    CARD: 'card',\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ItemTypes } from \"../utils/items\";\nimport \"./AnswerCard.css\";\n\nconst AnswerCard = (props) => {\n  const [content, setContent] = useState(props.content);\n  const [type, setType] = useState(props.type);\n  useEffect(() => {\n    setContent(props.content);\n    setType(props.type);\n  }, [props.content, props.type]);\n\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      type: ItemTypes.CARD,\n      id: props.id,\n      content: props.content,\n      cardType: props.type,\n    },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      className={`answer-card-${type}`}\n      id={props.id}\n      ref={drag}\n      style={{ opacity: isDragging ? \"0.5\" : \"1\" }}\n    >\n      <h4>{content}</h4>\n    </div>\n  );\n};\n\nexport default AnswerCard;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../utils/items\";\nimport { CardContext } from \"./ProblemBox\";\nimport \"./TargetBoard.css\";\nimport AnswerCard from \"./AnswerCard\";\n\nconst TargetBoard = (props) => {\n  const { chooseAnswer, isCorrectAnswer } = useContext(CardContext);\n  const [cards, setCards] = useState(props.cards);\n  const [chosenAnswer, setChosenAnswer] = useState();\n  const { incrementProblemIdx, incrementScore } = props.handler;\n\n  useEffect(() => {\n    setCards(props.cards);\n    setChosenAnswer(props.cards);\n  }, [props.cards]);\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item, monitor) => {\n      try {\n        if (hasSubmittedAlready(item.cardType)) throw Error();\n      } catch (error) {\n        alert(\"same type submitted\");\n        return;\n      }\n      chooseAnswer(item.id);\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  const hasSubmittedAlready = (cardType) => {\n    return chosenAnswer.some((answer) => answer.type === cardType);\n  };\n\n  const handleClick = () => {\n    if (chosenAnswer.length > 2) alert(\"pick a track of an artist\");\n    let submittedArtist = \"\",\n      submittedTrack = \"\";\n    chosenAnswer.forEach((answer) => {\n      if (answer.type === \"track\") submittedTrack = answer.content;\n      if (answer.type === \"artist\") submittedArtist = answer.content;\n    });\n\n    if (isCorrectAnswer(submittedTrack, submittedArtist)) {\n      incrementScore();\n    }\n    incrementProblemIdx();\n  };\n\n  return (\n    <div\n      className=\"target-board\"\n      ref={drop}\n      style={{ backgroundColor: isOver ? \"#26de81\" : \"#d1d8e0\" }}\n    >\n      <h3 className=\"target-board__instruction\">Move answer here</h3>\n      {cards.map((card, idx) => {\n        return (\n          <AnswerCard\n            content={card.content}\n            id={card.id}\n            type={card.type}\n            key={idx}\n          />\n        );\n      })}\n      <button className=\"target-board__submit-btn\" onClick={handleClick}>\n        submit\n      </button>\n    </div>\n  );\n};\n\nexport default TargetBoard;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"../utils/items\";\nimport { CardContext } from \"./ProblemBox\";\nimport AnswerCard from \"./AnswerCard\";\n\nconst SourceBoard = (props) => {\n  const { unchooseAnswer } = useContext(CardContext);\n  const [cards, setCards] = useState(props.cards);\n\n  useEffect(() => {\n    setCards(props.cards);\n  }, [props.cards]);\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item, monitor) => {\n      unchooseAnswer(item.id);\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div\n      className=\"source-board\"\n      ref={drop}\n    >\n      {cards.map((card, idx) => {\n        return <AnswerCard content={card.content} id={card.id} type={card.type} key={idx}/>;\n      })}\n    </div>\n  );\n};\n\nexport default SourceBoard;\n","import React, { createContext, useState, useEffect } from \"react\";\nimport AudioPlayer from \"./AudioPlayer\";\nimport TargetBoard from \"./TargetBoard\";\nimport SourceBoard from \"./SourceBoard\";\nimport \"./ProblemBox.css\";\n\nexport const CardContext = createContext({\n  chooseAnswer: null,\n  unchooseAnswer: null,\n  isCorrectAnswer: null,\n});\n\nconst numChoice = 3;\n\nconst ProblemBox = (props) => {\n  const [problem, setProblem] = useState(props.problem);\n  const [isVisible, setIsVisible] = useState(props.isVisible);\n\n  useEffect(() => {\n    setIsVisible(props.isVisible);\n  }, [props]);\n\n  const [answerList, setAnswerList] = useState(\n    props.problem.trackOptions\n      .map((track, idx) => {\n        return { id: idx, content: track, status: \"notChosen\", type: \"track\" };\n      })\n      .concat(\n        props.problem.artistOptions.map((artist, idx) => {\n          return {\n            id: idx + numChoice,\n            content: artist,\n            status: \"notChosen\",\n            type: \"artist\",\n          };\n        })\n      )\n  );\n\n  const chooseAnswer = (id) => {\n    const chosenAnswer = answerList.filter((item) => item.id === id);\n    chosenAnswer[0].status = \"chosen\";\n    setAnswerList(\n      answerList.filter((item) => item.id !== id).concat(chosenAnswer[0])\n    );\n  };\n\n  const unchooseAnswer = (id) => {\n    const chosenAnswer = answerList.filter((item) => item.id === id);\n    chosenAnswer[0].status = \"notChosen\";\n    setAnswerList(\n      answerList.filter((item) => item.id !== id).concat(chosenAnswer[0])\n    );\n  };\n\n  const isCorrectAnswer = (track, artist) => {\n    return track === problem.track && artist === problem.artist;\n  };\n\n  return (\n    <CardContext.Provider\n      value={{ chooseAnswer, unchooseAnswer, isCorrectAnswer }}\n    >\n      <div className={`problem-box-${isVisible}`}>\n        <AudioPlayer\n          className=\"audio-player\"\n          videoID={problem.videoID}\n          start={problem.startSeconds}\n          end={problem.endSeconds}\n        />\n        <SourceBoard\n          cards={answerList.filter((item, idx) => item.status === \"notChosen\")}\n        />\n        <TargetBoard\n          handler={props.handler}\n          cards={answerList.filter((item, idx) => item.status === \"chosen\")}\n        />\n      </div>\n    </CardContext.Provider>\n  );\n};\n\nexport default ProblemBox;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport Header from \"../components/Header\";\nimport ProblemBox from \"../components/ProblemBox\";\n\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { Redirect } from \"react-router\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nclass QuizTakingPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state.category =\n      this.props.location.state === undefined\n        ? localStorage.getItem(\"category\")\n        : this.props.location.state.category;\n    if (this.props.location.state !== undefined) {\n      localStorage.setItem(\n        \"category\",\n        JSON.stringify(this.props.location.state.category)\n      );\n    }\n\n    this.incrementProblemIdx = this.incrementProblemIdx.bind(this);\n    this.incrementScore = this.incrementScore.bind(this);\n  }\n\n  state = {\n    category: \"\",\n    redirect: false,\n    score: 0,\n    problemIdx: 0,\n    problems: [],\n  };\n\n  async fetchMusicProblems() {\n    const response = await fetch(API_URL);\n    const { problems } = await response.json();\n\n    const problemWithMultipleChoice = this.generateMultipleChoice(problems);\n    return problemWithMultipleChoice;\n  }\n\n  incrementProblemIdx() {\n    localStorage.setItem(\n      \"problemIdx\",\n      JSON.stringify(this.state.problemIdx + 1)\n    );\n    this.setState((state) => ({\n      problemIdx: state.problemIdx + 1,\n    }));\n  }\n\n  incrementScore() {\n    localStorage.setItem(\"score\", JSON.stringify(this.state.score + 1));\n    this.setState((state) => ({\n      score: state.score + 1,\n    }));\n  }\n\n  isEnd() {\n    return this.state.problemIdx === this.state.problems.length;\n  }\n\n  generateMultipleChoice(problems) {\n    const tracks = problems.map((problem) => problem.track);\n    const artists = problems.map((problem) => problem.artist);\n    const withMultipleChoice = problems.map((problem, idx, problems) => {\n      // 정답 (track, artist) 1 pair\n      // 오답 track 2개, artist 2개\n      const numberOfChoice = 2;\n      let trackPool = problems\n        .filter((p) => p.id !== problem.id)\n        .map((p) => p.track);\n      let trackOptions = trackPool\n        .sort(() => 0.5 - Math.random())\n        .slice(0, numberOfChoice);\n      trackOptions.push(problem.track);\n\n      let artistPool = problems\n        .filter((p) => p.id !== problem.id)\n        .map((p) => p.artist);\n      let artistOptions = artistPool\n        .sort(() => 0.5 - Math.random())\n        .slice(0, numberOfChoice);\n      artistOptions.push(problem.artist);\n\n      return { ...problem, trackOptions, artistOptions };\n    });\n    return withMultipleChoice;\n  }\n\n  componentDidMount() {\n    const category = localStorage.getItem(\"category\");\n    const problemIdx =\n      localStorage.getItem(\"problemIdx\") === null\n        ? 0\n        : JSON.parse(localStorage.getItem(\"problemIdx\"));\n    const score =\n      localStorage.getItem(\"score\") === null\n        ? 0\n        : JSON.parse(localStorage.getItem(\"score\"));\n\n    this.fetchMusicProblems()\n      .then((problems) => {\n        console.log(problems);\n        this.setState({\n          problems,\n          category,\n          problemIdx,\n          score,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  componentDidUpdate() {\n    if (this.isEnd()) {\n      this.setState({\n        redirect: true,\n      });\n    }\n  }\n\n  render() {\n    return this.state.redirect ? (\n      <Redirect\n        to={{\n          pathname: \"/quizend\",\n          state: {\n            numCorrect: this.state.score,\n            numTotal: this.state.problems.length,\n          },\n        }}\n      />\n    ) : (\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"wrapper\">\n          <Header />\n          <section className=\"container\">\n            <h3 className=\"instruction\">\n              Move a artist card and a track card to the the right!\n            </h3>\n            <h3>Category: {this.state.category}</h3>\n            <h4>\n              Score: {this.state.score}/{this.state.problemIdx}\n            </h4>\n            {this.state.problems.map((problem, idx) => {\n              return (\n                <ProblemBox\n                  problem={problem}\n                  handler={{\n                    incrementProblemIdx: this.incrementProblemIdx,\n                    incrementScore: this.incrementScore,\n                  }}\n                  isVisible={\n                    idx == this.state.problemIdx ? \"visible\" : \"invisible\"\n                  }\n                  key={idx}\n                />\n              );\n            })}\n          </section>\n        </div>\n      </DndProvider>\n    );\n  }\n}\n\nexport default QuizTakingPage;\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport { Link } from \"react-router-dom\";\n\nclass QuizEndPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state.numCorrect = this.props.location.state.numCorrect;\n    this.state.numTotal = this.props.location.state.numTotal;\n  }\n\n  state = {\n    numCorrect: 0,\n    numTotal: 0,\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header />\n        <section className=\"container\">\n          <h1>Thank you for taking quiz! visit agian!!</h1>\n          <h3>\n            Your Score: {this.state.numCorrect} / {this.state.numTotal}\n          </h3>\n          <Link to={{ pathname: \"/\" }}>\n            <button>\n              <p>Back to Home</p>\n            </button>\n          </Link>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default QuizEndPage;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport MainPage from \"../pages/index\";\nimport NotFoundPage from \"../pages/404\";\nimport QuizTakingPage from \"../pages/quizTakingPage\";\nimport \"./App.css\";\nimport QuizEndPage from \"../pages/quizEnd\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/404\" component={NotFoundPage} />\n          <Route exact path=\"/quiz\" component={QuizTakingPage} />\n          <Route exact path=\"/quizend\" component={QuizEndPage} />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}